/* Generated by AN DISI Unibo */ 
package it.unibo.prova

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Prova ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						request("activate", "activate(glass,10)" ,"transporttrolley" )  
					}
					 transition(edgeName="t010",targetState="again",cond=whenReply("pickupDone"))
				}	 
				state("again") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						delay(10000) 
						request("activate", "activate(plastic,10)" ,"transporttrolley" )  
					}
				}	 
			}
		}
}
