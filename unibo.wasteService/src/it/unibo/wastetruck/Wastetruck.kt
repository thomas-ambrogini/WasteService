/* Generated by AN DISI Unibo */ 
package it.unibo.wastetruck

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Wastetruck ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						delay(5000) 
					}
					 transition( edgeName="goto",targetState="requestdischarge", cond=doswitch() )
				}	 
				state("requestdischarge") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						 
									val Load    = kotlin.random.Random.nextLong(10,100)
									val RandInt = kotlin.random.Random.nextInt(0,1)
									var Type    = ""
									
									if(RandInt == 0) 
										Type = "glass"
									else
										Type = "plastic"
						request("storeload", "storeload($Type,$Load)" ,"wasteservice" )  
					}
					 transition(edgeName="t16",targetState="accepted",cond=whenReply("loadaccepted"))
					transition(edgeName="t17",targetState="rejected",cond=whenReply("loadrejected"))
				}	 
				state("rejected") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("Request rejected")
					}
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
				state("accepted") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("Request accepted")
					}
					 transition(edgeName="t28",targetState="handleleave",cond=whenDispatch("leaveindoor"))
				}	 
				state("handleleave") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("Leaving indoor")
					}
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
			}
		}
}
